# -*- mode: ruby encoding: UTF-8 -*-

#  Groovy -- A native launcher for Groovy
#
#  Copyright Â© 2006 Russel Winder
#
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
#  compliance with the License. You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software distributed under the License is
#  distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
#  implied. See the License for the specific language governing permissions and limitations under the
#  License.
#
#  Author : Russel Winder <russel@russel.org.uk>
#  $Revision$
#  $Date$

import 'clean'

LINUX = 'linux'
SOLARIS = 'solaris'
MAC_OS_X = 'darwin'
CYGWIN = 'cygwin'
MSYS = 'msys'
WINDOWS = 'windows'

Environment = { }

Environment[ 'Name' ] = 'groovy'
Environment[ 'BuildDirectory' ] = 'build'

Environment[ 'Architecture' ] = case RUBY_PLATFORM
                                when /linux/ then LINUX
                                when /solaris/ then SOLARIS
                                when /darwin/ then MAC_OS_X   
                                when /cygwin/ then
                                  if ENV[ 'MACHTYPE' ] =~ /msys/ then MSYS
                                  else CYGWIN end  
                                when /msys/ then MSYS  
                                else
                                  if ENV[ 'WINDIR' ]
                                    WINDOWS
                                  else raise "Unrecognized architecture -- #{Architecture}"
                                  end # if windir
                                end # case

if [ CYGWIN , MSYS , WINDOWS ].include?( Environment[ 'Architecture' ] ) then Environment[ 'Name' ] += '.exe' end

desc 'Clean everything.'
gen Clean , :clean
var[ :clean ].include( [ Environment[ 'BuildDirectory' ] , '**/*~' ] )

subdirs [ 'source' ]

task :default => 'source/default'
task :debug   => 'source/debug'
